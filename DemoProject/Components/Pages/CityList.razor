@page "/citylist"
@rendermode InteractiveServer
@inject HttpClient Http

<PageTitle>Citylist</PageTitle>

<h1>Stedenlijst</h1>

@if (cities == null)
{
    <p>Laden...</p>
}
else
{
    <label>Sorteer op aantal inwoners:</label>
    <select @bind="sortValue" @bind:after="OnSortChanged">
        <option value="0">Laag naar hoog</option>
        <option value="1">Hoog naar laag</option>
    </select>

    <table class="table table-striped mt-3">
        <thead>
            <tr>
                <th>Stad</th>
                <th>Land</th>
                <th>Aantal inwoners</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var city in cities)
            {
                <tr>
                    <td>@city.Name</td>
                    <td>@city.CountryName</td>
                    <td>@city.Population</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<CityDtoObj>? cities;

    private int sortValue = 0;

    private bool sortDescending => sortValue == 1;

    public class CityDtoObj
    {
        public string Name { get; set; }
        public int Population { get; set; }
        public string CountryName { get; set; }
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadCities();
    }

    private async Task LoadCities()
    {
        cities = await Http.GetFromJsonAsync<List<CityDtoObj>>(
            $"api/v1/city/allCities?sortDesc={sortDescending}");
    }

    private async Task OnSortChanged()
    {
        await LoadCities();
    }
}
